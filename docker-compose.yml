---
version: '3.6'
services:
  # The environment variable "TAG" is used throughout this file to
  # specify the version of the images to run. The default is set in the
  # '.env' file in this folder. It can be overridden with any normal
  # technique for setting environment variables, for example:
  #
  #   TAG=6.0.0-beta1 docker-compose up
  #
  # REF: https://docs.docker.com/compose/compose-file/#variable-substitution
  #
  # Also be sure to set the ELASTIC_VERSION variable. For released versions,
  # ${TAG} and ${ELASTIC_VERSION} will be identical, but for pre-release
  # versions, ${TAG} might contain an extra build identifier, like
  # "6.0.0-beta1-3eab5b40", so a full invocation might look like:
  #
  #   ELASTIC_VERSION=6.0.0-beta1 TAG=6.0.0-beta1-3eab5b40 docker-compose up
  #
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG}
    container_name: elasticsearch
    networks: ['stack']
    environment:
      - node.name=elastic-node-1
      - cluster.initial_master_nodes=elastic-node-1
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG}
    container_name: kibana
    ports: ['5601:5601']
    networks: ['stack']
    depends_on: ['elasticsearch']

  apm-server:
    image: docker.elastic.co/apm/apm-server:${TAG}
    container_name: apm_server
    networks: ['stack']
    command: -E apm-server.rum.enabled=true -e  # -e flag to log to stderr and disable syslog/file output
    depends_on: ['elasticsearch', 'kibana']

  heartbeat:
    image: docker.elastic.co/beats/heartbeat:${TAG}
    networks: ['stack']
    depends_on: ['elasticsearch']
    volumes:
      - ./heartbeat.docker.yml:/usr/share/heartbeat/heartbeat.yml:ro
    environment:
      - output.elasticsearch.hosts=["elasticsearch:9200"]

  petclinic:
    image: openjdk:8-jdk-alpine
    container_name: petclinic
    networks: ['stack']
    depends_on: ["mysql"]
    ports: ['8080:8080']
    volumes:
      - ./tmp:/tmp:rw
      - ./target:/tmp/target:ro
    command: ["java",
      "-Delastic.apm.server_urls=http://apm-server:8200",
      "-Delastic.apm.application_packages=org.springframework.samples",
      "-Delastic.apm.service_name=spring-petclinic-monolith",
      "-Dspring.profiles.active=mysql",
      "-Dspring.datasource.initialize=always",
      "-Dspring.datasource.url=jdbc:mysql://mysql/petclinic",
      "-XX:+StartAttachListener",
      "-jar", "/tmp/target/spring-petclinic-2.1.0.BUILD-SNAPSHOT.jar"]

  mysql:
    image: mysql:5.7.8
    container_name: mysql
    networks: ['stack']
    environment:
      - MYSQL_DATABASE=petclinic
      - MYSQL_ROOT_PASSWORD=petclinic
    # volumes:
    #   - "./conf.d:/etc/mysql/conf.d:ro"

  nginx:
    image: nginx:latest
    container_name: nginx
    networks: ['stack']
    ports: ['80:80']
#    depends_on: ["petclinic", "apm-server"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf


networks: {stack: {}}
